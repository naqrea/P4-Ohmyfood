
@keyframes heartbeat {
    0% {transform: scale(1)}
    40% {transform: scale(1.25)}
    100% {transform: scale(1)} 
  }

.heart-btn {
    @include position(relative);
    cursor: pointer;
        .heart-fill {
            @include position(absolute, $top: 0, $left: 0);
            background: linear-gradient(193.33deg, #9356DC -11.44%, #FF79DA 123.93%);
            background-clip: text;
            -webkit-text-fill-color: transparent;
            opacity: 0;
            @include transition(all, 0.3s, ease-in-out);
        }
}
.heart-btn:hover .heart-fill {
        opacity: 1;
        animation: heartbeat 0.4s ease-in-out 0.4s 1 forwards;
        }

.step-card {
    @include transition(all, 0.4s, ease-in-out);

    .step-card__txt, .step-card__icon {
        @include transition(all, 0.3s, ease-in-out);
    }
}

.step-card:hover {
    transform: scale(1.02);
    box-shadow: 0px 4px 15px 0px #00000035;
    background-color: $color-grey-light;

    .step-card__txt, .step-card__icon {
        color: $color-purple;	
    }
}

.restaurant-card {
    @include transition(all, 0.4s, ease-in-out);
}

.restaurant-card:hover {
    transform: scale(1.02);
}

.cta-btn {
    transition: transform 0.4s ease-in-out, opacity 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
}

.cta-btn:hover {
    opacity: 0.9;
    transform: scale(1.03);
    box-shadow: 0px 4px 10px 0px #00000080;
}

.select-trigger {
    @include transition(all, 0.4s, ease-in-out);
    .check-icon {
        opacity: 0;
        font-size: $font-size-l;
        transform: rotate(90deg);
        transition:  0.4s ease-in-out, opacity 0.3s ease-in-out;
    }
}

.item-card:hover {
    .select-trigger {
        @include sizing(72px, 100%);
    }
    
    .check-icon {
        opacity: 1;
        transform: rotate(0)    
    }
}

@keyframes fadeIn {
    0% { opacity: 0}
    100% { opacity: 1}
}

$sections: entrees, plats, desserts;

@each $section in $sections {
  .section-#{$section} {
    .item-card {
      animation-name: fadeIn;
      animation-duration: 0.7s;
      animation-fill-mode: both;
      animation-timing-function: ease-in-out;

      @for $i from 1 through 5 {
        &:nth-child(#{$i}) {
          animation-delay: ((0.15s * $i) + index($sections, $section) - 1s)
        }
      }
    }
  }
}



// Définir une variable de durée dans :root



  .loader-container {
    position: fixed;
    top: 0;
    left: 0;
    @include sizing(100%, 100%);
    @include flex(center, center);
    background-color: white;
    z-index: 1000;
    opacity: 1;
    animation: fadeOut 2s forwards 1s;
  
       .loader {
        border: 12px solid $color-grey-light; 
        border-top: 12px solid $color-purple; 
        border-radius: 50%;
        @include sizing(92px, 92px);
        animation: spin 2s ease-in-out infinite;
  } 
  }
  
  .main-container {
    opacity: 0;
    animation: fadeIn 1s forwards;
    animation-delay: 2s;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  @keyframes fadeOut {
    0% { opacity: 1; }
    100% { opacity: 0; visibility: hidden; }
  }
  
  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }  
  